///-----------------------------------------------------------------------------
///  FUNCTIONS: MATERIAL SHADOWS
///-----------------------------------------------------------------------------
///
///  Functions for generating multi-layer shadows.
///
///  @link https://tobiasahlin.com/blog/layered-smooth-box-shadows/
///  @link https://material.io/guidelines/material-design/elevation-shadows.html
///  @link https://material.io/guidelines/resources/shadows.html
///


///
/// Computes a material shadow for the 'box-shadow' property.
///
/// @param  {Number} $depth     Shadow Depth (from 1 to 5)
/// @param  {Color}  $color     Shadow color
/// @param  {Bool}   $intensity Shadow intensity (from 0 to 1)
/// @return {List}
///
@function soft-shadow( $layers, $color: rgba( 0,0,0,.125 ) ) {
  $val: 0 1px 1px $color;
  @for $i from 1 through $layers {
    @if $i % 2 == 0 {
      $val: #{$val}, 0 #{$i}px #{$i}px #{$color};
    }
  }
  @return $val;
}

///
/// Computes a material shadow for the 'box-shadow' property.
///
/// @param  {Number} $depth     Shadow Depth (from 1 to 5)
/// @param  {Color}  $color     Shadow color
/// @param  {Float}  $intensity Shadow intensity (from 0 to 1)
/// @return {List}
///
@function material-shadow( $depth, $color: "#000", $intensity: 1.0 ) {

  @if ( $depth > 5 ) {
    @warn "Invalid $depth `#{$depth}` for function `material-shadow()`.";
    @return null;
  }

  @if ( $depth < 1 or $intensity <= 0 ) {
    @return "none";
  }

  /// Bottom shadow
  $b-offset: nth( 1.5 3 6 10 15, $depth ) * 1px;
  $b-blur:   nth( 1 3 3 5 6, $depth )     * 4px;
  $b-color:  rgba( $color, nth( .24 .23 .23 .22 .22, $depth ) * $intensity );

  /// Top shadow
  $t-offset: nth( 1.5 3 10 14 19, $depth ) * 1px;
  $t-blur:   nth( 1.5 3 10 14 19, $depth ) * 4px;
  $t-color:  rgba( $color, nth( .12 .16 .19 .25 .30, $depth ) * $intensity );

  @return 0 $b-offset $b-blur $b-color, 0 $t-offset $t-blur $t-color;
}

///
/// Computes a material shadow for the 'filter' property.
///
/// @param  {Number} $depth     Shadow Depth (from 1 to 5)
/// @param  {Color}  $color     Shadow color
/// @param  {Float}  $intensity Shadow intensity (from 0 to 1)
/// @return {List}
///
@function material-shadow-filter( $depth, $color: "#000", $intensity: 1.0 ) {

  @if ( $depth > 5 ) {
    @warn "Invalid $depth `#{$depth}` for function `material-shadow-filter()`.";
    @return null;
  }

  @if ( $depth < 1 or $intensity <= 0 ) {
    @return "none";
  }

  ///
  /// Shadows made with CSS 'filter' property have slighty less intensity than
  /// their 'box-shadow' counterparts. Hence, we slightly increase it to
  /// normalize their appearance.
  ///
  $intensity: $intensity * 1.1;

  /// Bottom shadow
  $b-offset: nth( 1.5 3 6 10 15, $depth ) * 1px;
  $b-blur:   nth( 1 3 3 5 6, $depth )     * 4px / 1.5;
  $b-color:  rgba( $color, nth( .24 .23 .23 .22 .22, $depth ) * $intensity );

  /// Top shadow
  $t-offset: nth( 1.5 3 10 14 19, $depth ) * 1px;
  $t-blur:   nth( 1.5 3 10 14 19, $depth ) * 4px / 1.5;
  $t-color:  rgba( $color, nth( .12 .16 .19 .25 .30, $depth ) * $intensity );

  @return drop-shadow( 0 $b-offset $b-blur $b-color ) drop-shadow( 0 $t-offset $t-blur $t-color );
}
