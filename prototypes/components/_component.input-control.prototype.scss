///-----------------------------------------------------------------------------
///  COMPONENT: INPUT CONTROL
///-----------------------------------------------------------------------------
///
///  Customized checkbox and radio inputs.
///

///
/// @var    {Map}   Object settings.
/// @access public
///
$c-input-control: () !default;

///
/// @var    {Map}   Object configuration.
/// @access private
///
$_config: map-extend( (

  font-family: map-get( ui-input( "default" ), "font-family" ),
  font-size: null,
  font-weight: map-get( ui-input( "default" ), "font-weight" ),
  font-style: map-get( ui-input( "default" ), "font-style" ),
  line-height: null,

  "control-size": 1.25em,
  "control-margin": 0.375em,
  "checkbox-border-radius": null,

  "checked": (
    border: null,
    background: ui-color( "primary" ),
    color: $white,
    box-shadow: null,
  ),

), $c-input-control );


@if ( ui-load( "components", "input-control" ) == true ) {
/*-----------------------------------------------------------------------------*
 *  COMPONENT: CONTROL INPUT
 *-----------------------------------------------------------------------------*
 *
 *  Customized checkbox and radio inputs.
 *
 */

///
/// @block        Control
/// @description  Default input control.
///
/// 1. hide default input
/// 2. replaced input
/// 3. checkbox indicator
/// 4. radio indicator
///
%c-input-control {
  display: inline-flex;
  align-items: center;
  position: relative;

  [direction="rtl"] & {
    flex-direction: row-reverse;
  }

  font-family: map-get( $_config, "font-family" );
  font-size: map-get( $_config, "font-size" );
  font-weight: map-get( $_config, "font-weight" );
  font-style: map-get( $_config, "font-style" );
  line-height: map-get( $_config, "line-height" );

  /// [1] ///
  input {
    position: absolute;
    top: 0; left: 0;
    opacity: 0;
    z-index: -1;
  }

  input + * {
    padding-left: em( map-get( $_config, "control-size" ) ) + em( map-get( $_config, "control-margin" ) );
  }

  /// [2] ///
  input + *::before {
    @extend %transition !optional;
    content: "";
    pointer-events: none;

    position: absolute;
    top: 0; left: 0;

    flex: 0 1 auto;
    display: inline-flex;
    vertical-align: text-bottom;

    width: 1em;
    height: 1em;
    margin-right: map-get( $_config, "control-margin" );

    font-size: map-get( $_config, "control-size" );

    border: map-get( ui-input( "default" ), "border" );
    background: map-get( ui-input( "default" ), "background" );
    color: map-get( ui-input( "default" ), "color" );
    box-shadow: map-get( ui-input( "default" ), "box-shadow" );

    background-image: none;
    background-position: center center;
    background-repeat: no-repeat;
  }

  input + *:hover::before {
    border: map-get( ui-input( "hover" ), "border" );
    background: map-get( ui-input( "hover" ), "background" );
    color: map-get( ui-input( "hover" ), "color" );
    box-shadow: map-get( ui-input( "hover" ), "box-shadow" );
  }

  input:focus + *::before {
    border: map-get( ui-input( "focus" ), "border" );
    background: map-get( ui-input( "focus" ), "background" );
    color: map-get( ui-input( "focus" ), "color" );
    box-shadow: map-get( ui-input( "focus" ), "box-shadow" );
    outline: 0.15em auto ui-color( "primary" );
    outline-offset: 0.15em;
  }

  html:not(.no-js):not(.user-is-tabbing) & input:focus + *::before {
    outline: none;
  }

  input:checked + *::before {
    border: map-get-deep( $_config, "checked", "border" );
    background-color: map-get-deep( $_config, "checked", "background" );
    color: map-get-deep( $_config, "checked", "color" );
    box-shadow: map-get-deep( $_config, "checked", "box-shadow" );
  }

  input:disabled + *,
  input:disabled + *::before {
    opacity: 0.7;
    cursor: not-allowed;
  }

  /// [3] ///
  input[type="checkbox"] + *::before {
    background-position: center center;
    background-repeat: no-repeat;
    border-radius: map-get( $_config, "checkbox-border-radius" );
  }
  input[type="checkbox"]:checked + *::before {
    background-image: url( "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-6 -6 32 32'><path d='M20,6l-11,11l-5,-5' stroke-linecap='round' stroke-width='4' stroke='%23fff' fill='none' stroke-linejoin='round'></path></svg>" );
  }

  /// [4] ///
  input[type="radio"] + *::before {
    background-position: center center;
    background-repeat: no-repeat;
    border-radius: 50%;
  }
  input[type="radio"]:checked + *::before {
    background-image: url( "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='100%' height='100%'><circle fill='%23fff' cx='12' cy='12' r='5'/></svg>" );
  }

}

} // enabled
