///-----------------------------------------------------------------------------
///  LAYOUT: CONTAINER
///-----------------------------------------------------------------------------
///
///  Container which wraps and centers its children.
///

///
/// @var    {Map}  Element settings.
/// @access public
///
$l-container: () !default;

///
/// @var    {Map}
/// @access private
///
$_config: map-merge( (

  "default": 1300px,

  "xxlarge": 1140px,
  "xlarge":  900px,
  "large":   780px,
  "medium":  660px,
  "small":   540px,
  "xsmall":  420px,
  "xxsmall": 300px,

), $l-container );


@if ( ui-load( "layout", "container" ) == true ) {
/*-----------------------------------------------------------------------------*
 *  LAYOUT: CONTAINER
 *-----------------------------------------------------------------------------*
 *
 *  Container which wraps and centers its children.
 *
 */

///
/// @block        Container
/// @description  Default container component.
///
%l-container {
  flex-grow: 1;
  flex-direction: inherit;
  flex-wrap: inherit;
  justify-content: inherit;
  align-items: inherit;

  display: inherit;
  position: relative;

  max-width: map-get-deep( $_config, "default" );
  margin-left: auto;
  margin-right: auto;
}

///
/// @modifier     Container [Size]
/// @description  Container of different size.
///
@each $name, $size in $_config {
  %l-container--#{$name} { max-width: $size; }
}

} // ui-load()
